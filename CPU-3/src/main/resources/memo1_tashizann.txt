行いたい命令：
「0」番目のレジスタを指定し、そこに値「3」を代入する
「1」番目のレジスタを指定し、そこに値「5」を代入する
「2」番目のレジスタを指定し、そこに「0」番目のレジスタと「1」番目のレジスタの値を加算した結果を代入する

命令そのものに関して、
「全体の長さ」は48bit（6Byte）、
「命令を大きく分類」は5bit、→ 00001または00010（2種類あるので）
「似た命令をさらに分類」は3bit、→ 001（1種類、次回の記事以降ふえます）
「値を持っておくレジスタ×2~3個」は5bit、→ 
「値そのもの×0~1個」は32bitで用意。

命令のバイナリ表現：0,1だけで表現する
00000000_00000000_00000000_00000011_000_00000_001_00010
00000000_00000000_00000000_00000101_001_00001_001_00010
0000000000_0000000000_00000_00001_00000_00010_001_00001

命令の16進数表現：0-9, a-fで表現する、バイナリ表現を4桁ずつ区切る
00_00_00_03_00_22
00_00_00_05_21_22
00_00_00_04_02_21

命令を入れる順番：リトルエンディアン
00_00_00_03_00_22 → bootrom.hexには22,00,03,00,00,00の順番で入れる


※注意：テストの時は
Core.scalaの15行目、ファイル名を「bootrom1_tashizann.hex」にリネームすること。
TopTestの11行目、進めるクロックを「3」に変更すること。